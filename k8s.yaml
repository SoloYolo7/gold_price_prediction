---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-__PROJECT_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-__PROJECT_NAME__
  template:
    metadata:
      labels:
        app: api-__PROJECT_NAME__
    spec:
      containers:
        - name: api-__PROJECT_NAME__
          image: __API__VERSION__
          ports:
            - containerPort: 8000
          
          # --- ФИНАЛЬНОЕ РЕШЕНИЕ: STARTUP PROBE + READINESS PROBE ---

          # 1. Проверка Запуска (startupProbe):
          # Дает поду до 5 минут (30 попыток * 10 секунд) на то, чтобы запуститься
          # и загрузить модель, прежде чем Kubernetes посчитает его "упавшим".
          startupProbe:
            httpGet:
              path: /  # Проверяем корневой эндпоинт FastAPI
              port: 8000 # Порт, на котором работает uvicorn
            initialDelaySeconds: 30  # Начинаем проверять через 30 секунд
            periodSeconds: 10      # Проверяем каждые 10 секунд
            failureThreshold: 30   # 30 неудачных попыток = 300 секунд = 5 минут

          # 2. Проверка Готовности (readinessProbe):
          # Начнет работать только ПОСЛЕ успешного startupProbe.
          # Определяет, готов ли под принимать новый трафик.
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            periodSeconds: 15
            failureThreshold: 3
            timeoutSeconds: 5

          env:
            - name: AWS_ACCESS_KEY_ID
              value: "__AWS_ACCESS_KEY_ID__"
            - name: AWS_SECRET_ACCESS_KEY
              value: "__AWS_SECRET_ACCESS_KEY__"
            - name: MLFLOW_S3_ENDPOINT_URL
              value: "__MLFLOW_S3_ENDPOINT_URL__"
            - name: AWS_DEFAULT_REGION
              value: "ru-central1"
          resources:
            limits:
              cpu: 1
              memory: 4Gi
            requests:
              cpu: 0.5
              memory: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: api-__PROJECT_NAME__
spec:
  selector:
    app: api-__PROJECT_NAME__
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-__PROJECT_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui-__PROJECT_NAME__
  template:
    metadata:
      labels:
        app: ui-__PROJECT_NAME__
    spec:
      containers:
        - name: ui-__PROJECT_NAME__
          image: __UI__VERSION__
          ports:
            - containerPort: 7860
          env:
            - name: API_URL
              value: "http://api-gold-price-prediction/api-gold-price-prediction/predict"
            - name: ROOT_PATH
              value: "/ui-gold-price-prediction"
            - name: PORT
              value: "7860"
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 0.5
              memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ui-__PROJECT_NAME__
spec:
  selector:
    app: ui-__PROJECT_NAME__
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 7860
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alb-__PROJECT_NAME__ 
  annotations:
    ingress.alb.yc.io/subnets: __ALB_INGRESS_SUBNET__
    ingress.alb.yc.io/security-groups: __ALB_INGRESS_SEC_GROUP__
    ingress.alb.yc.io/external-ipv4-address: __ALB_INGRESS_EXT_IP__
    ingress.alb.yc.io/group-name: __PROJECT_NAME__-ingress-group
    ingress.alb.yc.io/requests-timeout: "300s"
    ingress.alb.yc.io/connect-timeout: "30s"

spec:
  tls:
    - hosts:
        - __DOMAIN_NAME__
      secretName: yc-certmgr-cert-id-__TLS_ID__
  rules:
    - host: __DOMAIN_NAME__
      http:
        paths:
          - path: /api-__PROJECT_NAME__
            pathType: Prefix
            backend:
              service:
                name: api-__PROJECT_NAME__
                port:
                  number: 80
          - path: /ui-__PROJECT_NAME__
            pathType: Prefix
            backend:
              service:
                name: ui-__PROJECT_NAME__
                port:
                  number: 80


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-__PROJECT_NAME__
data:
  nginx.conf: |
    worker_processes auto;
    events {
    }
    http {
      server {
        listen 80 ;
        location = /api-__PROJECT_NAME__ {
          proxy_pass http://api-__PROJECT_NAME__;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
      }
    }


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ui-__PROJECT_NAME__
data:
  nginx.conf: |
    worker_processes auto;
    events {
      worker_connections 1024;
    }
    http {
      include       mime.types;
      default_type  application/octet-stream;
      sendfile        on;
      keepalive_timeout  65;
      server {
        listen 80;
        server_name __DOMAIN_NAME__ www.__DOMAIN_NAME__;
        location /ui-__PROJECT_NAME__ {
          proxy_pass http://ui-__PROJECT_NAME__;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }
