---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-__PROJECT_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-__PROJECT_NAME__
  template:
    metadata:
      labels:
        app: api-__PROJECT_NAME__
    spec:
      containers:
        - name: api-__PROJECT_NAME__
          image: __API__VERSION__
          ports:
            - containerPort: 8000
          env:
            - name: AWS_ACCESS_KEY_ID
              value: "__AWS_ACCESS_KEY_ID__"
            - name: AWS_SECRET_ACCESS_KEY
              value: "__AWS_SECRET_ACCESS_KEY__"
            - name: MLFLOW_S3_ENDPOINT_URL
              value: "__MLFLOW_S3_ENDPOINT_URL__"
            - name: AWS_DEFAULT_REGION
              value: "ru-central1"
          resources:
            limits:
              cpu: 1
              memory: 4Gi  # <-- Увеличено
            requests:
              cpu: 0.5
              memory: 2Gi  # <-- Увеличено```
---
apiVersion: v1
kind: Service
metadata:
  name: api-__PROJECT_NAME__
spec:
  selector:
    app: api-__PROJECT_NAME__
  ports:
    - name: http
      port: 80
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-__PROJECT_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui-__PROJECT_NAME__
  template:
    metadata:
      labels:
        app: ui-__PROJECT_NAME__
    spec:
      containers:
        - name: ui-__PROJECT_NAME__
          image: __UI__VERSION__
          ports:
            - containerPort: 7860
          env:
            - name: API_URL
              value: "http://api-__PROJECT_NAME__/predict"
            - name: ROOT_PATH
              value: "/ui-__PROJECT_NAME__"
            - name: PORT
              value: "7860"
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 0.5
              memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ui-__PROJECT_NAME__
spec:
  selector:
    app: ui-__PROJECT_NAME__
  ports:
    - name: http
      port: 80
      targetPort: 7860
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alb-__PROJECT_NAME__ 
  annotations:
    # --- ЭТО КОНФИГУРАЦИЯ ДЛЯ YANDEX CLOUD ALB ---
    ingress.alb.yc.io/subnets: __ALB_INGRESS_SUBNET__
    ingress.alb.yc.io/security-groups: __ALB_INGRESS_SEC_GROUP__
    ingress.alb.yc.io/external-ipv4-address: __ALB_INGRESS_EXT_IP__
    ingress.alb.yc.io/group-name: __PROJECT_NAME__-ingress-group

    # --- ЭТО ИСПРАВЛЕНИЕ: ДОБАВЛЯЕМ ПРАВИЛЬНЫЕ ТАЙМАУТЫ ДЛЯ ALB ---
    ingress.alb.yc.io/requests-timeout: "300s"
    ingress.alb.yc.io/connect-timeout: "30s"

spec:
  tls:
    - hosts:
        - __DOMAIN_NAME__
      secretName: yc-certmgr-cert-id-__TLS_ID__
  rules:
    - host: __DOMAIN_NAME__
      http:
        paths:
          - path: /api-__PROJECT_NAME__
            pathType: Prefix
            backend:
              service:
                name: api-__PROJECT_NAME__
                port:
                  number: 80
          - path: /ui-__PROJECT_NAME__
            pathType: Prefix
            backend:
              service:
                name: ui-__PROJECT_NAME__
                port:
                  number: 80